<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.animo.dao.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.animo.pojo.Notice" >
    <id column="nid" property="nid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.animo.pojo.Notice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    nid, title, created_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where nid = #{nid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notice
    where nid = #{nid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.animo.pojo.Notice" >
    insert into notice (nid, title, created_time, 
      content)
    values (#{nid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.animo.pojo.Notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nid != null" >
        nid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nid != null" >
        #{nid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.animo.pojo.Notice" >
    update notice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.animo.pojo.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.animo.pojo.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where nid = #{nid,jdbcType=INTEGER}
  </update>


  <select id="listPager" resultType="com.animo.pojo.Notice" parameterType="com.animo.common.Pager">
    <![CDATA[
            select n.nid, n.title,n.content, n.created_time from notice AS n order by n.nid desc limit #{beginIndex}, #{pageSize}
        ]]>
  </select>

  <select id="count" resultType="long">
    select count(nid) FROM notice
  </select>



  <select id="listPagers" resultType="com.animo.pojo.Notice">
    <![CDATA[
         select n.nid, n.title,n.content, n.created_time from notice AS n order by n.nid desc
    ]]>
    limit #{pager.beginIndex}, #{pager.pageSize}
  </select>

  <select id="counts" resultType="long">
    select count(nid) FROM notice
  </select>



</mapper>